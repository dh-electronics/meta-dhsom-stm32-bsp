From 596bbc834f6830f205efd2c5bae2f33a29001d30 Mon Sep 17 00:00:00 2001
From: Fabien Dessenne <fabien.dessenne@foss.st.com>
Date: Fri, 22 Oct 2021 14:24:20 +0200
Subject: [PATCH 10/16] perf: stm32: support the pmu ".read" ops

Implement the "event read" ops which is called, for example, when
"perf stat" is called with the "-I" option.

Upstream-Status: Inappropriate [ST downstream https://github.com/STMicroelectronics/linux.git 6900856642ccb26602c9ab3e1771fc3d68cc8019]
Signed-off-by: Fabien Dessenne <fabien.dessenne@foss.st.com>
Change-Id: Ia0a1e16a117b580103bd8f14c72c11471d753488
---
 drivers/perf/stm32_ddr_pmu.c | 17 ++++++++++++++---
 1 file changed, 14 insertions(+), 3 deletions(-)

diff --git a/drivers/perf/stm32_ddr_pmu.c b/drivers/perf/stm32_ddr_pmu.c
index a6a2c547934b6..9191cbd492b48 100644
--- a/drivers/perf/stm32_ddr_pmu.c
+++ b/drivers/perf/stm32_ddr_pmu.c
@@ -87,7 +87,7 @@ static void stm32_ddr_pmu_event_configure(struct perf_event *event)
 	}
 }
 
-static void stm32_ddr_pmu_event_read(struct perf_event *event)
+static void stm32_ddr_pmu_event_update(struct perf_event *event)
 {
 	struct stm32_ddr_pmu *stm32_ddr_pmu = pmu_to_stm32_ddr_pmu(event->pmu);
 	unsigned long config_base = event->hw.config_base;
@@ -120,6 +120,16 @@ static void stm32_ddr_pmu_event_read(struct perf_event *event)
 	local64_add(val & mask, &event->count);
 }
 
+static void stm32_ddr_pmu_event_read(struct perf_event *event)
+{
+	struct stm32_ddr_pmu *stm32_ddr_pmu = pmu_to_stm32_ddr_pmu(event->pmu);
+
+	hrtimer_start(&stm32_ddr_pmu->hrtimer, stm32_ddr_pmu->poll_period,
+		      HRTIMER_MODE_REL_PINNED);
+
+	stm32_ddr_pmu_event_update(event);
+}
+
 static void stm32_ddr_pmu_event_start(struct perf_event *event, int flags)
 {
 	struct stm32_ddr_pmu *stm32_ddr_pmu = pmu_to_stm32_ddr_pmu(event->pmu);
@@ -165,7 +175,7 @@ static void stm32_ddr_pmu_event_stop(struct perf_event *event, int flags)
 	hw->state |= PERF_HES_STOPPED;
 
 	if (flags & PERF_EF_UPDATE) {
-		stm32_ddr_pmu_event_read(event);
+		stm32_ddr_pmu_event_update(event);
 		hw->state |= PERF_HES_UPTODATE;
 	}
 }
@@ -260,7 +270,7 @@ static enum hrtimer_restart stm32_ddr_pmu_poll(struct hrtimer *hrtimer)
 
 	for (i = 0; i < PMU_NR_COUNTERS; i++)
 		if (stm32_ddr_pmu->events[i])
-			stm32_ddr_pmu_event_read(stm32_ddr_pmu->events[i]);
+			stm32_ddr_pmu_event_update(stm32_ddr_pmu->events[i]);
 
 	hrtimer_forward_now(hrtimer, stm32_ddr_pmu->poll_period);
 
@@ -362,6 +372,7 @@ static int stm32_ddr_pmu_device_probe(struct platform_device *pdev)
 		.stop = stm32_ddr_pmu_event_stop,
 		.add = stm32_ddr_pmu_event_add,
 		.del = stm32_ddr_pmu_event_del,
+		.read = stm32_ddr_pmu_event_read,
 		.event_init = stm32_ddr_pmu_event_init,
 		.attr_groups = stm32_ddr_pmu_attr_groups,
 	};
-- 
2.43.0

